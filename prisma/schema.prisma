generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Immigration {
  id          String   @id @default(uuid())
  name        String
  description String
  provinceId  String
  province    Province @relation(fields: [provinceId], references: [id])
}

model ProvinceOverview {
  id         String          @id @default(uuid())
  provinceId String          @unique @map("province_id")
  bannerUrl  String          @map("banner_url")
  province   Province        @relation(fields: [provinceId], references: [id])
  scores     ProvinceScore[]
}

model ProvinceScore {
  id         String           @id @default(uuid())
  name       String
  score      Float
  emoji      String
  overviewId String           @map("overview_id")
  overview   ProvinceOverview @relation(fields: [overviewId], references: [id])
}

model Province {
  id                 String            @id @default(uuid())
  name               String
  capital            String
  slug               String
  language           String[]
  topCities          String[]          @map("top_cities")
  immigrationRanking Int               @map("immigration_ranking")
  imageUrl           String            @map("image_url")
  flagUrl            String            @map("flag_url")
  immigration        Immigration[]
  overview           ProvinceOverview?
  study              Study[]
  cities             City[]
}

model Study {
  id          String   @id @default(uuid())
  name        String
  description String
  provinceId  String   @map("province_id")
  cityId      String   @map("city_id")
  city        City     @relation(fields: [cityId], references: [id])
  provinces   Province @relation(fields: [provinceId], references: [id])
}

model City {
  id           String        @id @default(uuid())
  name         String
  slug         String
  language     String[]
  imageUrl     String        @map("image_url")
  costOfLiving Float         @map("cost_of_living")
  overallScore Float         @map("overall_score")
  provinceId   String        @map("province_id")
  study        Study[]
  provinces    Province      @relation(fields: [provinceId], references: [id])
  CityOverview CityOverview?
}

model CityOverview {
  id        String      @id @default(uuid())
  cityId    String      @unique @map("province_id")
  bannerUrl String      @map("banner_url")
  emojis    String[]    @default([])
  city      City        @relation(fields: [cityId], references: [id])
  scores    CityScore[]
}

model CityScore {
  id         String        @id @default(uuid())
  overviewId String        @map("overview_id")
  name       String
  score      Float?
  emoji      String
  overview   CityOverview? @relation(fields: [overviewId], references: [id])
}
